<<<<<<< HEAD
<!DOCTYPE html>
<html lang="pt-br">

<head>
    <base href="/home">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <title>Tradulibras</title>
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    <main>
        <div class="home">
            <h2 class="translate">TRADUTOR</h2>

            <div>
                <!-- Bot√£o de Logout -->
                <a href="/login/logout" class="button-logout">
                    <i class="material-icons">logout</i>
                </a>
            </div>

            <!-- Menu Hamburguer -->
            <button class="hamburger-menu" id="hamburgerMenu">
                <div></div>
                <div></div>
                <div></div>
            </button>

            <!-- Op√ß√µes do Menu -->
            <div class="menu-options" id="menuOptions">
                <a href="#">Op√ß√£o 1</a>
                <a href="#">Op√ß√£o 2</a>
                <a href="#">Op√ß√£o 3</a>
            </div>

            <form id="traduzirForm">
                <input class="input-1" type="text" placeholder="Digite uma palavra ou express√£o" name="palavra" id="palavra" required>
                <button type="submit" class="button-submit">
                    <i id="mic" class="material-icons">arrow_right_alt</i>
                </button>
                <button type="button" class="button-copy">
                    <i id="copy" class="material-icons">content_copy</i>
                </button>
            </form>
        </div>

        <div class="resultad" id="resultado"></div>

        <script>
            document.getElementById('traduzirForm').addEventListener('submit', async function (e) {
                e.preventDefault();  // Impede o envio padr√£o do formul√°rio

                const palavra = document.getElementById('palavra').value;

                try {
                    const response = await fetch('http://127.0.0.1:5000/translate', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ palavra }),
                    });

                    if (response.ok) {
                        const result = await response.json();
                        // Exibe apenas a palavra encontrada e o v√≠deo
                        const formattedResult = `
                            Palavra Encontrada: ${result.palavra_encontrada}
                            <iframe width="560" height="315" src="${result.video_url}" frameborder="0" allowfullscreen></iframe>
                        `;
                        document.getElementById('resultado').innerHTML = formattedResult; // Usar innerHTML para inserir o iframe
                    } else {
                        const errorResult = await response.json(); // Tente obter a mensagem de erro
                        document.getElementById('resultado').innerText = errorResult.mensagem || 'Erro ao traduzir a palavra';
                    }
                } catch (error) {
                    console.error('Erro ao enviar a entrada:', error);
                    document.getElementById('resultado').innerText = "Erro ao processar a entrada.";
                }
            });
        </script>
    </main>
</body>
</html>
=======
<%- include('includes/head'); %>

<body>
  <main>

<%- include('includes/navbar'); %>

<div class="digite-expressao"><p>Digite uma palavra ou express√£o:</p></div>
<form id="searchForm" class="input-group">
  <input type="text" class="input-home" id="input_text" name="input_text" placeholder="Exemplo: amar">
  <button class="btn-home" type="submit">&gt;</button>
</form>

<div class="resultado" id="result"></div>

<!-- Feedback -->
<div id="feedback" class="feedback-container" style="display: none;">
  <p>Esse era o resultado esperado?</p>
  <div class="feedback-buttons">
    <button onclick="enviarFeedback(true)" class="btn-feedback btn-sim">üëç Sim</button>
    <button onclick="enviarFeedback(false)" class="btn-feedback btn-nao">üëé N√£o</button>
  </div>
</div>

<!-- SCRIPT -->
<script>
  let ultimaEntrada = '';
  let ultimaSugestao = '';
  let ultimoScore = 0.0;

  document.getElementById('searchForm').addEventListener('submit', async function(event) {
    event.preventDefault();
    const inputText = document.getElementById('input_text').value;

    ultimaEntrada = inputText;

    const response = await fetch('http://localhost:5000/api/sugestao', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ texto: inputText }),
      mode: 'cors'
    });

    const resultDiv = document.getElementById('result');
    const feedbackDiv = document.getElementById('feedback');
    const data = await response.json();

    resultDiv.innerHTML = '';
    feedbackDiv.style.display = 'none';

    if (response.ok) {
      ultimaSugestao = data.expressao;
      ultimoScore = data.score;

      resultDiv.innerHTML = `
        <p>Express√£o sugerida: <strong>${data.expressao}</strong></p>
        <p>N√≠vel de confian√ßa: ${data.nivel_confianca}</p>
        <div class="video-container">
          <video controls autoplay>
            <source src="${data.url}" type="video/mp4">
            Seu navegador n√£o suporta o elemento de v√≠deo.
          </video>
        </div>
      `;
      feedbackDiv.style.display = 'block';
    } else {
      resultDiv.innerHTML = `<p>${data.mensagem || 'Erro ao buscar express√£o.'}</p>`;
    }
  });

  async function enviarFeedback(foiUtil) {
    const response = await fetch('http://localhost:5000/api/feedback', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        entrada: ultimaEntrada,
        sugestao: ultimaSugestao,
        score: ultimoScore,
        foi_util: foiUtil
      }),
      mode: 'cors'
    });

    const data = await response.json();
    alert(data.mensagem || 'Erro ao registrar feedback');
  }
</script>
>>>>>>> 02274f59c54a7257af59ef3f56eccd64b63a027c
