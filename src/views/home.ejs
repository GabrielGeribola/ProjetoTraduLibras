<%- include('includes/head'); %>

<body>
  <main>
    <%- include('includes/navbar'); %>

    <div class="container-home" id="homeContent">
      <h2 class="translate-home">TRADUTOR</h2>

      <div class="digite-expressao">
        <p>Digite uma palavra ou express칚o:</p>
      </div>

      <form id="searchForm" class="input-group">
        <input type="text" class="input-home" id="input_text" name="input_text" placeholder="Exemplo: Abra칞o">
        <button class="btn-home" type="submit">&gt;</button>
      </form>

      <div class="resultado" id="result"></div>

      <div class="feedback-container" id="feedback" style="display: none;">
        <p>Esse era o resultado esperado?</p>
        <div class="feedback-buttons">
          <button onclick="enviarFeedback(true)" class="btn-feedback btn-sim">游녨 Sim</button>
          <button onclick="enviarFeedback(false)" class="btn-feedback btn-nao">游녩 N칚o</button>
        </div>
      </div>

      <div class="buttons-cards">
        <a href="/home" class="card-traduzir">
          <p class="icon-traduzir">游대</p>
          <h3 class="title-card">Traduzir</h3>
          <p class="descricao-card">Converta palavras em Libras de forma r치pida e intuitiva.</p>
        </a>
        <a href="/cursos" class="card-aprender">
          <p class="icon-aprender">游닀</p>
          <h3 class="title-card">Aprender</h3>
          <p class="descricao-card">Descubra novos sinais e amplie seu conhecimento em Libras.</p>
        </a>
        <a href="/sugestoes" class="card-incluir">
          <p class="icon-incluir">游뱅</p>
          <h3 class="title-card">Incluir</h3>
          <p class="descricao-card">Facilite a comunica칞칚o e torne o di치logo mais acess칤vel.</p>
        </a>
      </div>
    </div>

    <!-- Chat din칙mico (inicia escondido) -->
    <div id="chatWrapper" style="display: none">
      <div class="chat-container" id="chatContainer"></div>
      <form id="chatForm" class="chat-input-container">
        <input type="text" class="input-home" id="chat_input" name="chat_input" placeholder="Digite aqui...">
        <button class="btn-home" type="submit">&gt;</button>
      </form>
    </div>

    <script>
      let ultimaEntrada = ''
      let ultimaSugestao = ''
      let ultimoScore = 0.0

      const resultDiv = document.getElementById('result')
      const feedbackDiv = document.getElementById('feedback')
      const homeContent = document.getElementById('homeContent')
      const chatWrapper = document.getElementById('chatWrapper')
      const chatContainer = document.getElementById('chatContainer')

      const searchForm = document.getElementById('searchForm')
      const chatForm = document.getElementById('chatForm')
      const chatInput = document.getElementById('chat_input')

      function appendMessage(content, sender = 'user') {
  const msg = document.createElement('div');
  msg.classList.add('chat-bubble', sender);
  
  // Se for mensagem do bot, trata HTML (v칤deo/feedback)
  if (sender === 'bot' && content.includes('<video')) {
    msg.innerHTML = content;
  } else {
    msg.textContent = content; // Previne XSS para mensagens simples
  }
  
  chatContainer.appendChild(msg);
  chatContainer.scrollTop = chatContainer.scrollHeight;
}

      searchForm.addEventListener('submit', async function (event) {
        event.preventDefault()
        const inputText = document.getElementById('input_text').value.trim()
        if (!inputText) return

        // Oculta conte칰do inicial e mostra chat
        homeContent.style.display = 'none'
        chatWrapper.style.display = 'block'

        // Passa o texto para o chat
        chatInput.value = inputText
        chatForm.dispatchEvent(new Event('submit'))
      })

      chatForm.addEventListener('submit', async function (event) {
        event.preventDefault()
        const inputText = chatInput.value.trim()
        if (!inputText) return

        ultimaEntrada = inputText
        appendMessage(inputText, 'user')
        chatInput.value = ''

        const response = await fetch('http://localhost:5000/api/sugestao', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ texto: inputText }),
          mode: 'cors'
        })

        const data = await response.json()

        if (response.ok) {
          ultimaSugestao = data.expressao
          ultimoScore = data.score

          const botMessage = `
            <p><strong>${data.expressao}</strong></p>
            <p>N칤vel de confian칞a: ${data.nivel_confianca}</p>
            <div class="video-container">
              <video controls>
                <source src="${data.url}" type="video/mp4">
                Seu navegador n칚o suporta v칤deo.
              </video>
            </div>
            <div class="feedback-inline">
              <span>Esse era o resultado esperado?</span>
              <button onclick="enviarFeedback(true)">游녨</button>
              <button onclick="enviarFeedback(false)">游녩</button>
            </div>
          `
          appendMessage(botMessage, 'bot')
        } else {
          appendMessage(data.mensagem || 'Erro ao buscar express칚o.', 'bot')
        }
      })

      async function enviarFeedback(foiUtil) {
        const response = await fetch('http://localhost:5000/api/feedback', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            entrada: ultimaEntrada,
            sugestao: ultimaSugestao,
            score: ultimoScore,
            foi_util: foiUtil
          }),
          mode: 'cors'
        })

        const data = await response.json()
        appendMessage(data.mensagem || 'Feedback recebido!', 'bot')
      }
    </script>
  </main>
</body>